services:
  db:
    image: postgres:16-alpine
    container_name: jobs-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-jobs}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-jobs123}
      POSTGRES_DB: ${POSTGRES_DB:-jobsdb}
    ports:
      - "${POSTGRES_PORT:-5434}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./db/training_runs.sql:/docker-entrypoint-initdb.d/training_runs.sql:ro

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
    - "8080:8080"
    depends_on:
    - db


  ml:
    build: ./ml
    container_name: jobs-ml
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT_INTERNAL:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-jobs}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-jobs123}
      - POSTGRES_DB=${POSTGRES_DB:-jobsdb}
    ports:
      - "${ML_PORT:-8000}:8000"
    volumes:
      - ./ml/models:/app/models

  api:
    build: ./api
    container_name: jobs-api
    restart: unless-stopped
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: ${API_PORT_INTERNAL:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-jobs}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-jobs123}
      POSTGRES_DB: ${POSTGRES_DB:-jobsdb}
      PORT: ${API_PORT:-4000}
      ML_BASE: http://ml:8000
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      ENABLE_CRON: ${ENABLE_CRON:-true}
      ADAPTER_TIMEOUT_MS: ${ADAPTER_TIMEOUT_MS:-8000}
    depends_on:
      - db
      - ml
    ports:
      - "${API_PORT:-4000}:4000"

  frontend:
    build: ./frontend
    container_name: jobs-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:4000}
    depends_on:
      - api
    ports:
      - "5173:80"

volumes:
  db_data:
